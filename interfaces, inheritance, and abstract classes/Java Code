IT6302 - (LAB) Integrative Programming and Technology 1
PRELIM PERIOD

Here's a sample Java program that demonstrates the use of interfaces, inheritance, and abstract classes:

// Interface
interface Printable {
    void print();
}

// Abstract Class
abstract class Shape {
    abstract double getArea();
}

// Concrete Class (extends Shape and implements Printable)
class Circle extends Shape implements Printable {
    private double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    @Override
    double getArea() {
        return Math.PI * radius * radius;
    }

    @Override
    public void print() {
        System.out.println("Circle with radius " + radius);
    }
}

// Concrete Class (extends Shape and implements Printable)
class Rectangle extends Shape implements Printable {
    private double width;
    private double height;

    public Rectangle(double width, double height) {
        this.width = width;
        this.height = height;
    }

    @Override
    double getArea() {
        return width * height;
    }

    @Override
    public void print() {
        System.out.println("Rectangle with width " + width + " and height " + height);
    }
}

public class Main {
    public static void main(String[] args) {
        // Create instances of Circle and Rectangle
        Circle circle = new Circle(5.0);
        Rectangle rectangle = new Rectangle(4.0, 6.0);

        // Print shapes
        System.out.println("Printing shapes:");
        circle.print();
        rectangle.print();

        // Calculate and print areas
        System.out.println("\nCalculating areas:");
        System.out.println("Circle area: " + circle.getArea());
        System.out.println("Rectangle area: " + rectangle.getArea());
    }
}

Output:

Printing shapes:
Circle with radius 5.0
Rectangle with width 4.0 and height 6.0

Calculating areas:
Circle area: 78.53981633974483
Rectangle area: 24.0

This program demonstrates:

1. Interface: Printable interface with a print() method.
2. Abstract Class: Shape the abstract class with an abstract getArea() method.
3. Inheritance: Circle and Rectangle classes extend the Shape abstract class.
4. Implementation: Circle and Rectangle classes implement the Printable interface.


The Main class creates instances of Circle and Rectangle, prints their details using the print() method, and calculates their areas using the getArea() method.
